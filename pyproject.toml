[build-system]
requires = [
    "setuptools>=61",
    "setuptools-scm~=9.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "flake8-tergeo"
dynamic = [
    "version",
]
description = "flake8 plugin which keeps your code clean and tidy"
authors = [
    { name = "Kai Harder", email = "kai.harder@sap.com" },
]
readme = "README.md"
keywords = [
    "flake8",
    "plugin",
    "quality",
    "linter",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Plugins",
    "Framework :: Flake8",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Quality Assurance",
    "Typing :: Typed",
]
requires-python = ">=3.9,<4"
dependencies = [
    "flake8>=7,<9",
    "typing-extensions~=4.4",
    "flake8-comprehensions==3.16.0",
    "flake8-bugbear==24.12.12",
    "flake8-builtins==3.0.0",
    "flake8-simplify==0.22.0",
    "flake8-pytest-style==2.1.0",
    "flake8-typing-imports==1.16.0",
    "stdlib-list==0.11.0;python_version<'3.10'",
    "packaging>=24",
    "dependency_groups~=1.3",
    "tomli~=2.2;python_version<'3.11'",
]
license = "Apache-2.0"
license-files = [
    "LICENSE",
]

[project.urls]
"Issue Tracker" = "https://github.com/SAP/flake8-tergeo/issues"
Changelog = "https://github.com/SAP/flake8-tergeo/blob/main/CHANGELOG.md"

[project.entry-points."flake8.extension"]
FT = "_flake8_tergeo:Flake8TergeoPlugin"

[dependency-groups]
dev = [
    "pre-commit==4.3.0",
    "pylint==3.3.8",
    "black==25.1.0",
    "isort==6.0.1",
    "mypy==1.17.1",
    "flake8==7.3.0",
    "types-flake8-simplify==0.22.0.20250708",
    "types-flake8-builtins==3.0.0.20250819",
    "types-flake8-bugbear==24.12.12.20250416",
    "types-flake8-typing-imports==1.16.0.20250708",
    "pylint-per-file-ignores==2.0.3",
    "types-stdlib-list==0.8.3.4",
    "yesqa==1.5.0",
    "astpretty==3.0.0",
    "pyupgrade==3.20.0",
]
test = [
    "pytest==8.4.2",
    "pytest-mock==3.15.0",
    "pytest-cov==7.0.0",
    "pytest-xdist==3.8.0",
    "pytest-randomly==3.16.0",
    "pytest-datadir==1.8.0",
    "coverage==7.10.6",
    "diff-cover==9.6.0",
    "flake8-json==24.4.0",
    "dirty-equals==0.9.0",
    "pytest-fixture-classes==1.0.3",
]

[tool.setuptools.packages.find]
include = [
    "_flake8_tergeo*",
]

[tool.setuptools.package-data]
_flake8_tergeo = [
    "py.typed",
]

[tool.isort]
profile = "black"
add_imports = [
    "from __future__ import annotations",
]

[tool.mypy]
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_unreachable = true
strict = true
warn_unused_ignores = true
warn_return_any = false
disable_error_code = [
    "type-abstract",
]
enable_error_code = [
    "explicit-override",
    "possibly-undefined",
    "ignore-without-code",
    "deprecated",
]
strict_bytes = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_traceback = true
strict_concatenate = true

[[tool.mypy.overrides]]
module = [
    "astpretty.*",
]
follow_untyped_imports = true

[tool.pylint.basic]
no-docstring-rgx = "^_"
good-names = [
    "visit_Module",
    "visit_ClassDef",
    "visit_FunctionDef",
    "visit_AsyncFunctionDef",
]

[tool.pylint.design]
min-public-methods = 0

[tool.pylint.master]
max-line-length = 100
py-version = [
    3,
    9,
]
load-plugins = [
    "pylint_per_file_ignores",
]

[tool.pylint."messages control"]
enable = [
    "all",
]
disable = [
    "fixme",
    "locally-disabled",
    "suppressed-message",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-positional-arguments",
    "too-many-arguments",
    "too-many-locals",
    "too-many-lines",
    "too-many-boolean-expressions",
    "use-implicit-booleaness-not-comparison-to-zero",
    "use-implicit-booleaness-not-comparison-to-string",
    "global-statement",
]
per-file-ignores = [
    "tests/**:missing-function-docstring,missing-class-docstring,redefined-outer-name,protected-access,unused-argument"
]

[tool.pylint.reports]
reports = false

[tool.pylint.similarities]
ignore-imports = true

[tool.coverage.report]
fail_under = 90
show_missing = true
skip_covered = true
exclude_also = [
    "def __repr__",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "pytest\\.fail",
]

[tool.coverage.run]
branch = true
include = [
    "_flake8_tergeo/*",
    "tests/*",
]

[tool.diff_cover]
include_untracked = true
fail_under = 90
exclude = [
    "*/tests/*",
]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config -p no:legacypath"
filterwarnings = [
    "error",
    "ignore:ast\\.Num is deprecated and will be removed in Python 3\\.14:DeprecationWarning:astor",
    "ignore:ast\\..* is deprecated and will be removed in Python 3\\.14:DeprecationWarning:flake8_simplify",
]
xfail_strict = true

[tool.setuptools_scm]
version_file = ""
version_scheme = "calver-by-date"
